# UI definition
# Copyright 2021, Holger Fleischmann, Bavaria/Germany
# Apache License 2.0

#:import MeasurementsGroup measurementsview 
#:import GraphsScreen graphsview  

<DataLoggerWidget>:
    padding:  [6, 6, 6, 6]
    orientation:  'vertical'
    
    status_text: ''
    time_text: ' '
    date_text: ' '

    # header bar:
    BoxLayout:
        orientation:  'horizontal'
        height:  time_label.height + date_label.height
        size_hint_y:  None
        
        Button:
            canvas:
                Rectangle:
                    source: 'images/temperature-measure.png'
                    pos: self.x + (self.width - 35) / 2, self.y + (self.height - 35) / 2
                    size: 35, 35
            background_color:  [0.6, 0.6, 1, 1] if screen_manager.index == 0 else [0.5, 0.5, 1, 0]
            width:  self.height
            size_hint_x: None
            on_press:
                screen_manager.index = 0
            
        Button:
            canvas:
                Rectangle:
                    source: 'images/graphs.png'
                    pos: self.x + (self.width - 35) / 2, self.y + (self.height - 35) / 2
                    size: 35, 35
            background_color:  [0.6, 0.6, 1, 1] if screen_manager.index == 1 else [0.5, 0.5, 1, 0]
            width:  self.height
            size_hint_x: None
            on_press:
                screen_manager.index = 1
            
        Button:
            canvas:
                Rectangle:
                    source: 'images/record.png'
                    pos: self.x + (self.width - 35) / 2, self.y + (self.height - 35) / 2
                    size: 35, 35
            background_color:  [0.6, 0.6, 1, 1] if screen_manager.index == 1 else [0.5, 0.5, 1, 0]
            width:  self.height
            size_hint_x: None
            on_press:
                root.start
        
        Button:
            canvas:
                Rectangle:
                    source: 'images/stop.png'
                    pos: self.x + (self.width - 35) / 2, self.y + (self.height - 33) / 2
                    size: 35, 35
            background_color:  [0.6, 0.6, 1, 1] if screen_manager.index == 1 else [0.5, 0.5, 1, 0]
            width:  self.height
            size_hint_x: None
            on_press:
                screen_manager.index = 1
             
            
        # status text:
        Label:
            id: status_label
            text: root.status_text
            halign:  'left'
            valign:  'center'
            font_size:  '20sp'
            text_size:  self.size
            
        # time and date in the top right corner:
        BoxLayout:
            orientation:  'vertical'
            size_hint_x:  None
            Label:
                id: time_label
                text: root.time_text
                halign:  'center'
                valign:  'top'
                font_size:  '24sp'
                size: self.texture_size
            Label:
                id: date_label
                font_size:  '16sp'
                text: root.date_text
                halign:  'center'
                valign:  'top'
                color:  [1, 1, 1, 0.85]
                size: self.texture_size
    
    Carousel:
        id: screen_manager
        direction:  'right'
        anim_type: 'in_out_circ'
        MeasurementsScreen:
            id: measurements_screen
            name: 'measurements'
        GraphsScreen:
            id: graphs_screen
            name: 'graphs'


<MeasurementsScreen>:
    BoxLayout:
        id: columns
        orientation:  'horizontal'
    

<MeasurementsGroup>:
    orientation:  'vertical'
    
    Label:
        id: header_text
        text: root.header_text
        font_size:  '20sp'
        padding_y:  6
        #bold:  True
        size: self.texture_size
        size_hint_y:  None
        canvas.before:
            Color:
                rgba: (.5, 0.5, .5, .5)
            Rectangle:
                pos: (self.x + 1, self.y + 2)
                size: (self.width - 2, self.height - 4)
                
    ScrollView:
        GridLayout:
            id: measurements_view
            cols: 1
            size_hint_y: None
            height: self.minimum_height

<Label@MeasurementItem>:
    font_size:  '20sp'

<MeasurementItem>:

    signal_color: (0.0, 0.9, 0.1, 1.0)

    orientation: 'horizontal'
    height: 30
    size_hint_y: None
    canvas.before:
        Color:
            rgba: (.0, 0.9, .1, .3) if self.selected else (0, 0, 0, 1)
        Rectangle: 
            pos: self.pos
            size: self.size

    Label:
        width: 24
        height: 30
        size_hint_x: None
        size_hint_y: None
        canvas.before:
            Color:
                rgba: root.signal_color
            Rectangle:
                pos: (self.x + 6, self.y + 8)
                size: (16, 16)
                    
    Label:
        text: root.label
        markup:  True
        font_size:  '15sp'
        color:  [1, 1, 1, 0.85]
        text_size:  self.size
        halign:  'left'
        valign: 'center'
        size_hint_x:  None
        width: 126
        padding_x: 3
    Label:
#         canvas.before:
#             Color:
#                 rgba: (.9, 0.9, .1, .3)
#             Rectangle:
#                 pos: self.pos
#                 size: self.size
        text: root.value
        bold: True
        color: (1, 1, 1, .2) if root.stale else (1, 1, 1, 1)
        font_size: '16sp' if root.small else self.font_size
        text_size:  self.size
        halign:  'right'
        valign: 'center'
        size_hint_x:  None
        width: 65
        padding_x: 3
    Label:
        text: root.unit
        color:  [1, 1, 1, 0.85]
        text_size:  self.size
        font_size: '16sp' if root.small else self.font_size
        halign:  'left'
        valign: 'center'
        width : 65
        size_hint_x:  None
        padding_x: 3

<GraphsCanvas>:

<GraphsScreen>:
    BoxLayout:
        padding:  [5, 0, 15, 0]
        GraphsCanvas:
            id: graphs_canvas
            padding: 5
            x_grid_label: False
            x_grid: True
            y_grid_label: True
            y_grid: True

<OkCancelPopup>:
    message: 'missing text'
    BoxLayout:
        orientation:  'vertical'
        AnchorLayout:
            Label:
                text: root.message
        AnchorLayout:
            anchor_x: 'right'
            anchor_y: 'bottom'
            size_hint_y:  None
            BoxLayout:
                orientation: 'horizontal'
                Button:
                    text: 'OK'
                    on_release:
                        root.ok_action()
                Button:
                    text: 'Cancel'
                    on_release:
                        root.cancel_action()